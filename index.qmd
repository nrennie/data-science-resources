---
title: "Data Science Resources"
subtitle: "A collection of useful, freely-available data science resources and links, curated by [Nicola Rennie](https://nrennie.rbind.io/)."
format:
  html:
    toc: true
    page-layout: full
    theme: custom.scss
    image: preview.png
    include-after-body: 
      text: |
        <footer class="footer">Â© Nicola Rennie. 2025. All rights reserved.</footer>
execute: 
  eval: true
  echo: false
---

```{css, echo = FALSE}
select {
  background-color: #fff;
  border: 1px solid rgba(0,0,0,.1);
  border-radius: 3px;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  font-weight: 400;
  margin: 0;
  outline-style: solid;
  outline-width: 0;
  padding: 5px 7px;
  width: 100%;
}
```

Want to add a resource? File an issue or edit the `resources.csv` file on [GitHub](https://github.com/nrennie/data-science-resources) and submit a PR.

```{r}
#| message: false
resources <- readr::read_csv("resources.csv") |>
  dplyr::mutate(
    LinkText = stringr::str_remove_all(Link, "https://|/$"),
    Link = glue::glue("<a href='{Link}' target = '_blank'>{LinkText}</a>")
  ) |>
  dplyr::select(-LinkText) |>
  dplyr::mutate(
    Category = stringr::str_replace_all(Category, ";", ", ")
  )
```

```{r}
#| message: false
library(htmltools)
filter_fct <- function(values, name) {
  tags$select(
    tags$option(value = "", "All"),
    purrr::map(unique(values), tags$option),
    onchange = glue::glue(
      "Reactable.setFilter(
        'resources-tbl',
        '{name}',
        event.target.value
      )"
    )
  )
}
```


```{r}
resources |>
  dplyr::arrange(Type, Title) |>
  reactable::reactable(
    columns = list(
      Type = reactable::colDef(
        name = "Type",
        filterInput = filter_fct,
        maxWidth = 180
      ),
      Link = reactable::colDef(
        html = TRUE
      ),
      Category = reactable::colDef(
        maxWidth = 180
      )
    ),
    searchable = TRUE,
    striped = TRUE,
    pagination = FALSE,
    elementId = "resources-tbl",
    filterable = TRUE,
    sortable = TRUE,
    showSortable = TRUE,
    theme = reactable::reactableTheme(
      backgroundColor = "#F0F5F5",
      rowStyle = list(
        backgroundColor = "#F0F5F5",
        color = "black"
      ),
      rowStripedStyle = list(
        backgroundColor = "#FFFFFF"
      )
    )
  )
```

<br>

Links to external websites are provided for convenience and informational purposes only. We do not endorse, guarantee, or take responsibility for the accuracy, reliability, or content of any linked site.

